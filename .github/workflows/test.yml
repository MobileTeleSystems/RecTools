name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]


jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry
        run: pip install urllib3==1.26.15 poetry==1.8.3

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-lint-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
  
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make install 

      - name: Static analysis
        run: make lint

  test:
    name: test ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: pip install urllib3==1.26.15 poetry==1.4.0

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-test-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
  
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make install 

      - name: Run tests
        run: make test

      - name: Upload coverage
        if: matrix.python-version == '3.9'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
